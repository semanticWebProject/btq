<?xml version="1.0" encoding="UTF-8"?>
<questions id="1" name="Actors &amp; Movies" image="http://www.enchantedmind.com/wp/wp-content/uploads/2013/01/Movies.jpg">
	<question>
		<endpoint>0</endpoint>
		<text>Who is this actor? {parameter1}</text>
        <sparql>PREFIX umbel-rc: #lthttp://umbel.org/umbel/rc/#gt
        	PREFIX vrank:#lthttp://purl.org/voc/vrank##gt
        	SELECT DISTINCT (str(?{parameter1})) as ?imageURL
        	(str(?{parameter2})) as ?actorLabel
            FROM #lthttp://people.aifb.kit.edu/ath/#DBpedia_PageRank#gt
            FROM #lthttp://dbpedia.org#gt
            WHERE {
            ?actor rdf:type umbel-rc:Actor.
            ?actor rdfs:label ?actorLabel .
            ?actor dbo:thumbnail ?imageURL .
            ?actor foaf:gender ?gender .
            ?actor vrank:hasRank/vrank:rankValue ?pr.
            filter(langMatches(lang(?actorLabel),"EN"))
            filter(?gender="male"@en)
            filter(?pr#gt{fromPageRank} AND ?pr#lt{toPageRank})
            } OFFSET {offset} LIMIT 10</sparql>
        <parameter1>imageURL</parameter1>
		<parameter2>actorLabel</parameter2>
        <offsetMax>70</offsetMax>
        <levels>
        	<level id="0" offsetMax="40" fromPageRank="25" toPageRank="80"></level>
        	<level id="1" offsetMax="100" fromPageRank="10" toPageRank="25"></level>
        	<level id="2" offsetMax="200" fromPageRank="0" toPageRank="10"></level>
        </levels>
        <description>{parameter2} is this: {parameter1}.</description>
    </question>
    <question>
		<endpoint>0</endpoint>
		<text>Who is this actress? {parameter1}</text>
        <sparql>PREFIX umbel-rc: #lthttp://umbel.org/umbel/rc/#gt
        	PREFIX vrank:#lthttp://purl.org/voc/vrank##gt
        	SELECT DISTINCT (str(?{parameter1})) as ?imageURL
        	(str(?{parameter2})) as ?actorLabel
            FROM #lthttp://people.aifb.kit.edu/ath/#DBpedia_PageRank#gt
            FROM #lthttp://dbpedia.org#gt
            WHERE {
            ?actor rdf:type umbel-rc:Actor.
            ?actor rdfs:label ?actorLabel .
            ?actor dbo:thumbnail ?imageURL .
            ?actor foaf:gender ?gender .
            ?actor vrank:hasRank/vrank:rankValue ?pr.
            filter(langMatches(lang(?actorLabel),"EN"))
            filter(?gender="female"@en)
            filter(?pr#gt{fromPageRank} AND ?pr#lt{toPageRank})
            } OFFSET {offset} LIMIT 10
        </sparql>
        <parameter1>imageURL</parameter1>
		<parameter2>actorLabel</parameter2>
        <offsetMax>1000</offsetMax>
        <levels>
        	<level id="0" offsetMax="40" fromPageRank="25" toPageRank="80"></level>
        	<level id="1" offsetMax="100" fromPageRank="10" toPageRank="25"></level>
        	<level id="2" offsetMax="200" fromPageRank="0" toPageRank="10"></level>
        </levels>
        <description>{parameter2} is this: {parameter1}.</description>
    </question>
    <question>
		<endpoint>0</endpoint>
		<text>In which year did the actor/actress {parameter1} start his/her career?</text>
		<sparql>PREFIX umbel-rc: #lthttp://umbel.org/umbel/rc/#gt
			PREFIX vrank:#lthttp://purl.org/voc/vrank##gt
            SELECT ?{parameter1}, ?{parameter2}
            FROM #lthttp://people.aifb.kit.edu/ath/#DBpedia_PageRank#gt
            FROM #lthttp://dbpedia.org#gt
            WHERE {
            ?actor rdf:type umbel-rc:Actor.
            ?actor rdfs:label ?actorLabel .
            ?actor dbo:activeYearsStartYear ?startYear .
            ?actor vrank:hasRank/vrank:rankValue ?pr.
            filter(langMatches(lang(?actorLabel),"EN"))
            filter(?pr#gt{fromPageRank} AND ?pr#lt{toPageRank})
            BIND (STR(?actorLabel)  AS ?stripped_actorLabel)
            BIND (STR(?startYear)  AS ?stripped_startYear)} OFFSET {offset} LIMIT 10 </sparql>
		<parameter1>stripped_actorLabel</parameter1>
		<parameter2>stripped_startYear</parameter2>
        <offsetMax>5000</offsetMax>
         <levels>
        	<level id="0" offsetMax="40" fromPageRank="25" toPageRank="80"></level>
        	<level id="1" offsetMax="100" fromPageRank="10" toPageRank="25"></level>
        	<level id="2" offsetMax="200" fromPageRank="0" toPageRank="10"></level>
        </levels>
        <description>{parameter2} is the year of where {parameter1} started a career.</description>
    </question>
    <question>
		<endpoint>0</endpoint>
		<text>When was the actor/actress {parameter1} born?</text>
        <sparql>PREFIX umbel-rc: #lthttp://umbel.org/umbel/rc/#gt
        	PREFIX vrank:#lthttp://purl.org/voc/vrank##gt
            SELECT DISTINCT ?{parameter1}, ?{parameter2}
            FROM #lthttp://people.aifb.kit.edu/ath/#DBpedia_PageRank#gt
            FROM #lthttp://dbpedia.org#gt
            WHERE {
            ?actor rdf:type umbel-rc:Actor.
            ?actor rdfs:label ?actorLabel .
            ?actor dbo:birthDate ?dateOfBirth .
            ?actor vrank:hasRank/vrank:rankValue ?pr.
            filter(langMatches(lang(?actorLabel),"EN"))
            filter(xsd:date(?dateOfBirth))
            filter(?pr#gt{fromPageRank} AND ?pr#lt{toPageRank})
            BIND (STR(?actorLabel)  AS ?stripped_actorLabel)
            BIND (STR(?dateOfBirth)  AS ?stripped_dateOfBirth)
            } OFFSET {offset} LIMIT 10</sparql>
        <parameter1>stripped_actorLabel</parameter1>
		<parameter2>stripped_dateOfBirth</parameter2>
        <offsetMax>5000</offsetMax>
        <levels>
        	<level id="0" offsetMax="40" fromPageRank="25" toPageRank="80"></level>
        	<level id="1" offsetMax="100" fromPageRank="10" toPageRank="25"></level>
        	<level id="2" offsetMax="200" fromPageRank="0" toPageRank="10"></level>
        </levels>
        <description>{parameter2} is the birth date of {parameter1}, for example.</description>
    </question>
    <question>
		<endpoint>0</endpoint>
		<text>Who is the writer as well as director of the movie {parameter1}? </text>
        <sparql>PREFIX vrank:#lthttp://purl.org/voc/vrank##gt
           SELECT DISTINCT ?{parameter1} , ?{parameter2}
            FROM #lthttp://people.aifb.kit.edu/ath/#DBpedia_PageRank#gt
            FROM #lthttp://dbpedia.org#gt
            WHERE {
            ?movie rdf:type dbo:Film .
            ?movie rdfs:label ?movieLabel .
            ?movie dbo:writer ?writer .
            ?writer rdfs:label ?writerLabel .
            ?movie dbo:director ?director .
            ?director rdfs:label ?directorLabel .
            ?director owl:sameAs ?writer .
            ?movie vrank:hasRank/vrank:rankValue ?pr.
            filter(langMatches(lang(?movieLabel),"EN"))  .
            filter(langMatches(lang(?writerLabel),"EN"))  .
            filter(langMatches(lang(?directorLabel),"EN"))  .
            filter(?pr#gt{fromPageRank} AND ?pr#lt{toPageRank}) . } OFFSET {offset} LIMIT 10</sparql>
        <parameter1>movieLabel</parameter1>
		<parameter2>writerLabel</parameter2>
        <offsetMax>900</offsetMax>
         <levels>
        	<level id="0" offsetMax="50" fromPageRank="1.5" toPageRank="8.0"></level>
        	<level id="1" offsetMax="100" fromPageRank="0.35" toPageRank="1.4"></level>
        	<level id="2" offsetMax="200" fromPageRank="0" toPageRank="0.35"></level>
        </levels>
        <description>{parameter2} is the writer and director of {parameter1}.</description>
    </question>
</questions>