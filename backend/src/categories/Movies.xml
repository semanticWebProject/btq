<?xml version="1.0" encoding="UTF-8"?>
<questions id="1" name="Actors &amp; Movies" image="http://www.enchantedmind.com/wp/wp-content/uploads/2013/01/Movies.jpg">
	<question>
		<endpoint>0</endpoint>
		<text>Who is this actor? {parameter1}</text>
        <sparql>
			PREFIX owl: #lthttp://www.w3.org/2002/07/owl##gt
			PREFIX xsd: #lthttp://www.w3.org/2001/XMLSchema##gt
			PREFIX foaf: #lthttp://xmlns.com/foaf/0.1/#gt
			PREFIX dbo: #lthttp://dbpedia.org/ontology/#gt
			PREFIX rdfs: #lthttp://www.w3.org/2000/01/rdf-schema##gt
			PREFIX rdf: #lthttp://www.w3.org/1999/02/22-rdf-syntax-ns##gt
	        PREFIX umbel-rc: #lthttp://umbel.org/umbel/rc/#gt
        	PREFIX vrank: #lthttp://purl.org/voc/vrank##gt
        	SELECT DISTINCT ?{parameter1} 
        	?{parameter2} 
            FROM #lthttp://people.aifb.kit.edu/ath/#DBpedia_PageRank#gt
            FROM #lthttp://dbpedia.org#gt
            WHERE {
            ?actor rdf:type umbel-rc:Actor.
            ?actor rdfs:label ?actorLabel .
            ?actor dbo:thumbnail ?imageURL .
            ?actor foaf:gender ?gender .
            ?actor vrank:hasRank/vrank:rankValue ?pr.
            filter(langMatches(lang(?actorLabel),"EN"))
            filter(?gender="male"@en)
            filter(?pr#gt{fromPageRank} #amp#amp ?pr#lt{toPageRank})
            } OFFSET {offset} LIMIT 10</sparql>
        <parameter1>imageURL</parameter1>
		<parameter2>actorLabel</parameter2>
        <offsetMax>70</offsetMax>
        <levels>
        	<level id="0" offsetMax="60" fromPageRank="15" toPageRank="80"></level>
        	<level id="1" offsetMax="180" fromPageRank="8" toPageRank="16"></level>
        	<level id="2" offsetMax="2150" fromPageRank="0" toPageRank="9"></level>
        </levels>
        <description>{parameter2} is this: {parameter1}.</description>
    </question>
    <question>
		<endpoint>0</endpoint>
		<text>Who is this actress? {parameter1}</text>
        <sparql>
			PREFIX owl: #lthttp://www.w3.org/2002/07/owl##gt
			PREFIX xsd: #lthttp://www.w3.org/2001/XMLSchema##gt
			PREFIX foaf: #lthttp://xmlns.com/foaf/0.1/#gt
			PREFIX dbo: #lthttp://dbpedia.org/ontology/#gt
			PREFIX rdfs: #lthttp://www.w3.org/2000/01/rdf-schema##gt
			PREFIX rdf: #lthttp://www.w3.org/1999/02/22-rdf-syntax-ns##gt
			PREFIX umbel-rc: #lthttp://umbel.org/umbel/rc/#gt
        	PREFIX vrank:#lthttp://purl.org/voc/vrank##gt
        	SELECT DISTINCT ?{parameter1} ?{parameter2}
            FROM #lthttp://people.aifb.kit.edu/ath/#DBpedia_PageRank#gt
            FROM #lthttp://dbpedia.org#gt
            WHERE {
            ?actor rdf:type umbel-rc:Actor.
            ?actor rdfs:label ?actorLabel .
            ?actor dbo:thumbnail ?imageURL .
            ?actor foaf:gender ?gender .
            ?actor vrank:hasRank/vrank:rankValue ?pr.
            filter(langMatches(lang(?actorLabel),"EN"))
            filter(?gender="female"@en)
            filter(?pr #gt {fromPageRank} #amp#amp ?pr #lt {toPageRank})
            } OFFSET {offset} LIMIT 10
        </sparql>
        <parameter1>imageURL</parameter1>
		<parameter2>actorLabel</parameter2>
        <offsetMax>1000</offsetMax>
        <levels>
        	<level id="0" offsetMax="150" fromPageRank="5" toPageRank="56"></level>
        	<level id="1" offsetMax="525" fromPageRank="2" toPageRank="6"></level>
        	<level id="2" offsetMax="1510" fromPageRank="0" toPageRank="3"></level>
        </levels>
        <description>{parameter2} is this: {parameter1}.</description>
    </question>
    <question>
		<endpoint>0</endpoint>
		<text>In which year did the actor/actress {parameter1} start his/her career?</text>
		<sparql>
			PREFIX owl: #lthttp://www.w3.org/2002/07/owl##gt
			PREFIX xsd: #lthttp://www.w3.org/2001/XMLSchema##gt
			PREFIX foaf: #lthttp://xmlns.com/foaf/0.1/#gt
			PREFIX dbo: #lthttp://dbpedia.org/ontology/#gt
			PREFIX rdfs: #lthttp://www.w3.org/2000/01/rdf-schema##gt
			PREFIX rdf: #lthttp://www.w3.org/1999/02/22-rdf-syntax-ns##gt
			PREFIX umbel-rc: #lthttp://umbel.org/umbel/rc/#gt
			PREFIX vrank:#lthttp://purl.org/voc/vrank##gt
            SELECT ?{parameter1} ?{parameter2}
            FROM #lthttp://people.aifb.kit.edu/ath/#DBpedia_PageRank#gt
            FROM #lthttp://dbpedia.org#gt
            WHERE {
            ?actor rdf:type umbel-rc:Actor.
            ?actor rdfs:label ?actorLabel .
            ?actor dbo:activeYearsStartYear ?startYear .
            ?actor vrank:hasRank/vrank:rankValue ?pr.
            filter(langMatches(lang(?actorLabel),"EN"))
            filter(?pr #gt {fromPageRank} #amp#amp ?pr #lt {toPageRank})
            BIND (STR(?actorLabel)  AS ?stripped_actorLabel)
            BIND (STR(?startYear)  AS ?stripped_startYear)} OFFSET {offset} LIMIT 10 </sparql>
		<parameter1>stripped_actorLabel</parameter1>
		<parameter2>stripped_startYear</parameter2>
        <offsetMax>5000</offsetMax>
         <levels>
        	<level id="0" offsetMax="185" fromPageRank="12" toPageRank="80"></level>
        	<level id="1" offsetMax="580" fromPageRank="5" toPageRank="12"></level>
        	<level id="2" offsetMax="4300" fromPageRank="0" toPageRank="5"></level>
        </levels>
        <description>{parameter2} is the year of when {parameter1} started a career.</description>
    </question>
    <question>
		<endpoint>0</endpoint>
		<text>When was the actor/actress {parameter1} born?</text>
        <sparql>
			PREFIX owl: #lthttp://www.w3.org/2002/07/owl##gt
			PREFIX xsd: #lthttp://www.w3.org/2001/XMLSchema##gt
			PREFIX foaf: #lthttp://xmlns.com/foaf/0.1/#gt
			PREFIX dbo: #lthttp://dbpedia.org/ontology/#gt
			PREFIX rdfs: #lthttp://www.w3.org/2000/01/rdf-schema##gt
			PREFIX rdf: #lthttp://www.w3.org/1999/02/22-rdf-syntax-ns##gt
            PREFIX umbel-rc: #lthttp://umbel.org/umbel/rc/#gt
        	PREFIX vrank:#lthttp://purl.org/voc/vrank##gt
            SELECT DISTINCT ?{parameter1} (year(?dateOfBirth) as ?{parameter2})
            FROM #lthttp://people.aifb.kit.edu/ath/#DBpedia_PageRank#gt
            FROM #lthttp://dbpedia.org#gt
            WHERE {
            ?actor rdf:type umbel-rc:Actor.
            ?actor rdfs:label ?actorLabel .
            ?actor dbo:birthDate ?dateOfBirth .
            ?actor vrank:hasRank/vrank:rankValue ?pr.
            filter(langMatches(lang(?actorLabel),"EN"))
            filter(xsd:date(?dateOfBirth))
            filter(?pr#gt{fromPageRank} #amp#amp ?pr#lt{toPageRank})
            BIND (STR(?actorLabel)  AS ?stripped_actorLabel)
            } OFFSET {offset} LIMIT 10</sparql>
        <parameter1>stripped_actorLabel</parameter1>
		<parameter2>yearOfBirth</parameter2>
        <offsetMax>5000</offsetMax>
        <levels>
        	<level id="0" offsetMax="152" fromPageRank="14" toPageRank="72"></level>
        	<level id="1" offsetMax="252" fromPageRank="8" toPageRank="14"></level>
        	<level id="2" offsetMax="6700" fromPageRank="0" toPageRank="8"></level>
        </levels>
        <description>{parameter2} is the birth date of {parameter1}, for example.</description>
    </question>
    <question>
		<endpoint>0</endpoint>
		<text>Who is the writer as well as director of the movie {parameter1}? </text>
        <sparql>
			PREFIX owl: #lthttp://www.w3.org/2002/07/owl##gt
			PREFIX xsd: #lthttp://www.w3.org/2001/XMLSchema##gt
			PREFIX foaf: #lthttp://xmlns.com/foaf/0.1/#gt
			PREFIX dbo: #lthttp://dbpedia.org/ontology/#gt
			PREFIX rdfs: #lthttp://www.w3.org/2000/01/rdf-schema##gt
			PREFIX rdf: #lthttp://www.w3.org/1999/02/22-rdf-syntax-ns##gt
            PREFIX vrank:#lthttp://purl.org/voc/vrank##gt
            SELECT DISTINCT ?{parameter1} ?{parameter2}
            FROM #lthttp://people.aifb.kit.edu/ath/#DBpedia_PageRank#gt
            FROM #lthttp://dbpedia.org#gt
            WHERE {
            ?movie rdf:type dbo:Film .
            ?movie rdfs:label ?movieLabel .
            ?movie dbo:writer ?writer .
            ?writer rdfs:label ?writerLabel .
            ?movie dbo:director ?director .
            ?director rdfs:label ?directorLabel .
            ?director owl:sameAs ?writer .
            ?movie vrank:hasRank/vrank:rankValue ?pr.
            filter(langMatches(lang(?movieLabel),"EN"))  .
            filter(langMatches(lang(?writerLabel),"EN"))  .
            filter(langMatches(lang(?directorLabel),"EN"))  .
            filter(?pr#gt{fromPageRank} #amp#amp ?pr#lt{toPageRank}) . } OFFSET {offset} LIMIT 10</sparql>
        <parameter1>movieLabel</parameter1>
		<parameter2>writerLabel</parameter2>
        <offsetMax>900</offsetMax>
         <levels>
        	<level id="0" offsetMax="276" fromPageRank="1" toPageRank="8.0"></level>
        	<level id="1" offsetMax="1084" fromPageRank="0.5" toPageRank="1"></level>
        	<level id="2" offsetMax="1378" fromPageRank="0" toPageRank="0.5"></level>
        </levels>
        <description>{parameter2} is the writer and director of {parameter1}.</description>
    </question>
</questions>